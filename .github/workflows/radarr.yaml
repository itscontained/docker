name: radarr
on:
  schedule:
    - cron: '*/30 * * * *'
  push:
    paths:
      - '.github/workflows/radarr.yaml'
  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: false
      ignoreVersionCheck:
        description: 'true/false'
        required: false

jobs:
  version-check:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.check.outputs.version }}
    steps:
      - name: Get Version
        id: check
        run: |
          export VERSION=$(curl -s "https://radarr.lidarr.audio/v1/update/aphrodite/changes?os=linux" | jq -r '.[0].version')
          echo VERSION=$VERSION
          MATCH="$(curl -s https://registry.hub.docker.com/v1/repositories/itscontained/radarr/tags | jq -r '.[] | select(.name==env.VERSION) | .name')"
          if [[ -z "$MATCH" ]] || [[ "${{ github.event.inputs.ignoreVersionCheck }}" != "" ]]
          then
            echo Setting version output for build job
            echo ::set-output name=version::$VERSION
          else
            echo Found existing tag in repo
            echo ::set-output name=version::""
          fi
  multiarch:
    needs: version-check
    if: needs.version-check.outputs.version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./images/radarr/Dockerfile
          build-args: VERSION=${{ needs.version-check.outputs.version }}
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
          push: true
          tags: |
            itscontained/radarr:latest
            itscontained/radarr:${{ needs.version-check.outputs.version }}
            quay.io/itscontained/radarr:latest
            quay.io/itscontained/radarr:${{ needs.version-check.outputs.version }}
            ghcr.io/itscontained/radarr:latest
            ghcr.io/itscontained/radarr:${{ needs.version-check.outputs.version }}
      - name: Inspect
        run: |
          docker buildx imagetools inspect itscontained/radarr:${{ steps.prep.outputs.version }}
